@model NewsSiteVersion2.Models.AdminSearchViewModel

@{
    ViewData["Title"] = "Index";
}

<h2>Search</h2>
<form asp-action="Search">
    <div class="container">
        <div class="input-group">
            <input name="searchTerm" type="text" class="form-control"   placeholder="Search for...">
            <input type="hidden" asp-for="CategoryName" />
            <span class="input-group-btn">
                <button class="btn btn-search" type="submit"><i class="fa fa-search fa-fw"></i> Search</button>
            </span>
        </div>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.News.First().News.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.News.First().News.Subtitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.News.First().News.Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.News.First().News.IsHeaderNews)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.News.First().AuthorName)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.News.First().News.Category.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.News.First().News.CreatedOn)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.News)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.News.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.News.Subtitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.News.Text)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.News.IsHeaderNews)
                </td>
               
                <td>
                    @Html.DisplayFor(modelItem => item.AuthorName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.News.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.News.CreatedOn)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.News.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.News.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.News.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager(
    Model.News,
    page => Url.Action("Index", "Admin", new {  pageNumber=page, categoryName=Model.CategoryName,searchTerm=Model.SearchTerm }),
    new PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" },
        DisplayLinkToLastPage = PagedListDisplayMode.Never,
        DisplayEllipsesWhenNotShowingAllPageNumbers=false


})
